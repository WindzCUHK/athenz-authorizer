name: lint

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '0 10 * * *'
  # If any commit message in your push or the HEAD commit of your PR contains the strings
  # [skip ci], [ci skip], [no ci], [skip actions], or [actions skip]
  # workflows triggered on the push or pull_request events will be skipped.
  # https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  # If any commit message in your push or the HEAD commit of your PR contains the strings
  # [skip ci], [ci skip], [no ci], [skip actions], or [actions skip]
  # workflows triggered on the push or pull_request events will be skipped.
  # https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/
  pull_request:
    branches: [ master ]

env:
  GOLANG_VERSION: ^1.19

jobs:
  # This job runs golangci-lint and reports issues from linters.
  # https://github.com/golangci/golangci-lint-action
  golangci:
    name: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        # continue-on-error: true
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: "latest"
          # Optional: golangci-lint command line arguments.
          args: --issues-exit-code=0

  # This job runs markdownlint and reports issues from linters.
  # https://github.com/DavidAnson/markdownlint-cli2-action
  markdownlint:
    name: markdownlint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: markdownlint
        uses: DavidAnson/markdownlint-cli2-action@v7
        continue-on-error: true
        with:
          globs: |
            README.md
            CHANGELOG.md
            docs/*.md

  # This job runs snyk-cli and reports vulnerabilities.
  # https://github.com/snyk/actions
  snyk:
    name: snyk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
